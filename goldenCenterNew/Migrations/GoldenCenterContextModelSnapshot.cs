// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using goldenCenterNew.Data;

#nullable disable

namespace goldenCenterNew.Migrations
{
    [DbContext(typeof(GoldenCenterContext))]
    partial class GoldenCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("goldenCenterNew.Models.CR_Alerts", b =>
                {
                    b.Property<int>("PKAlertID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKAlertID"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FKDeviceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("PKAlertID");

                    b.HasIndex("FKDeviceID");

                    b.ToTable("CR_Alerts", (string)null);
                });

            modelBuilder.Entity("goldenCenterNew.Models.CR_CyclesHistories", b =>
                {
                    b.Property<int>("PKCycleHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKCycleHistoryID"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("FKDeviceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PKCycleHistoryID");

                    b.HasIndex("FKDeviceID");

                    b.ToTable("CR_CyclesHistories", (string)null);
                });

            modelBuilder.Entity("goldenCenterNew.Models.CT_DeviceTypes", b =>
                {
                    b.Property<int>("PKDeviceTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKDeviceTypeID"));

                    b.Property<float>("AlertThreshold")
                        .HasColumnType("real");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("CyclesLimit")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("WeeklyCyclesLimit")
                        .HasColumnType("int");

                    b.HasKey("PKDeviceTypeID");

                    b.ToTable("CT_DeviceTypes", (string)null);
                });

            modelBuilder.Entity("goldenCenterNew.Models.CT_Devices", b =>
                {
                    b.Property<int>("PKDeviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKDeviceID"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("Cycles")
                        .HasColumnType("int");

                    b.Property<int>("FKTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeeklyCycles")
                        .HasColumnType("int");

                    b.HasKey("PKDeviceID");

                    b.HasIndex("FKTypeID");

                    b.ToTable("CT_Devices", (string)null);
                });

            modelBuilder.Entity("goldenCenterNew.Models.CT_Roles", b =>
                {
                    b.Property<int>("PKRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKRoleID"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PKRoleID");

                    b.ToTable("CT_Roles", (string)null);
                });

            modelBuilder.Entity("goldenCenterNew.Models.CT_UsersRoles", b =>
                {
                    b.Property<int>("PKUserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKUserRoleID"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FKRoleID")
                        .HasColumnType("int");

                    b.Property<int>("FKUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("PKUserRoleID");

                    b.HasIndex("FKRoleID");

                    b.HasIndex("FKUserID");

                    b.ToTable("CT_UsersRoles", (string)null);
                });

            modelBuilder.Entity("goldenCenterNew.Models.SC_Users", b =>
                {
                    b.Property<int>("PKUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PKUserID"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("NTAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PKUserID");

                    b.ToTable("SC_Users", (string)null);
                });

            modelBuilder.Entity("goldenCenterNew.Models.CR_Alerts", b =>
                {
                    b.HasOne("goldenCenterNew.Models.CT_Devices", "Device")
                        .WithMany()
                        .HasForeignKey("FKDeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("goldenCenterNew.Models.CR_CyclesHistories", b =>
                {
                    b.HasOne("goldenCenterNew.Models.CT_Devices", "Device")
                        .WithMany()
                        .HasForeignKey("FKDeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("goldenCenterNew.Models.CT_Devices", b =>
                {
                    b.HasOne("goldenCenterNew.Models.CT_DeviceTypes", "DeviceType")
                        .WithMany()
                        .HasForeignKey("FKTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceType");
                });

            modelBuilder.Entity("goldenCenterNew.Models.CT_UsersRoles", b =>
                {
                    b.HasOne("goldenCenterNew.Models.CT_Roles", "Role")
                        .WithMany()
                        .HasForeignKey("FKRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("goldenCenterNew.Models.SC_Users", "User")
                        .WithMany()
                        .HasForeignKey("FKUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
